比如php，当时去买书看或者看视频教程的，过完一遍马上着手做个人博客。我当时过一遍并不要求熟悉全部知识，只是熟悉基本语法和基本概念，模仿着现有博客去补充功能，遇到不会实现的再回去看教程。从最开始的简单文本框提交，到后面接触到了ajax、正则、写接口等等内容。当博客搭起来了，数据多起来了，就会遇到数据库优化、数据缓存等问题，这又要去学习。有的时候为了优化需要重构大部分代码，我就需要解决怎么让每次更新更方便，于是就需要模块化等思想了。我就是这么一边摸索、一边学习、一边完善，其实这个博客从开始做到最后结束经历的时间很久了，大概一个半月。当然之后我一直坚持逛github，或者看看wp、discuz、phpcms等开源项目的代码，学习别人的设计思路、关键算法。其实这么说来，我是觉得任何一本教材上的内容都是不充分的，你别指望一本书里的内容就能支撑你做一个完整的项目，实际用到的很多技术是需要上网搜或者自己琢磨的。
又比如android，其实也是类似php的。自学一遍java，就开始设计一个初期目标，自己实现它！当初我开始时是决定做一个类似陌陌的app，大概花了2个半月的时间完成了。当然，并非完全一样，由于条件限制，我改成了局域网版的陌陌，通过wifi或者自建热点的形式连通设备，怎么实现的？当然是去android Dev上搜相关SDK文档，看官方demo。完成后，就想着怎么完善，比如加特效、加动画、怎么运行更流畅，简单来说，你要尽可能完善你做的东西。
总的来说，书本只是带我们进门，重点是多实践，实践中多想想该实现什么功能、怎么实现这些功能、这些功能预期带来的效果是怎么样的？带着这些目的回到书本或者网上去寻找答案。利用好github和sf，你可以不push或者提问，但是必须多看看别人的项目是怎么实现的，别人是怎么解决问题的。另外我个人觉得很重要的一点：学会给自己限制时间，比如说下周一前必须实现某个功能，真切把它当成要紧事。
以上仅是个人见解哈，希望对你有帮助。

甚好，刚吃饱饭。

我大学本科专业是通信工程（被调剂到这个学院的，想进计算机但是没得选，哭~），跟编程啊软件啊毛线关系都没有的一个专业，学的是各种傅里叶变换→_→ 在学院老师眼里，我算是个不折不扣的“差生”。

大一上学期，上了一周课后，发现对这专业的课没有任何兴趣，为了消磨时间，我之后在各种专业课上看C++ plus、数据结构、算法之美bala bala的诸如此类的书。越往后越发不可收拾，不满足于书上那些小demo的我开始试着动手做点大东西，于是乎，大一下学期就开始接触HTML/CSS、PHP、Java，尝试着弄弄网站后台系统、开发Android应用等等。

大二开始，在猪八戒上接到了第一单，委托人需要做一个项目进度跟踪的系统。委托人对UI有诸多要求，还要求与他们现有的员工系统和签到系统进行对接。当时才真正意识到，妈蛋自己把网站开发想得太简单了。
自己以前随着性子做的网页，界面什么的几乎是去搜网上共享的，觉得看着不错就拿来用，哪里有试过自己去设计→_→ 那时意识到单干是多么可笑的事情，也清楚一个团队的重要性。随后我从学校的艺院里找了2个网页设计专业的学生，又去计软那找了2个前端和1个phper，于是一个6人team就这么定下来了。大二~大四，我们一直在合作着接外包项目，从当初的web到后来app需求也接，team也从当时的6人到后来的10人，其实也就多了2个android 和2个iOS→_→

- - - - - - - - - -
我个人角度来看，接外包活好处是显而易见的：
1、意识到团队的重要性
在没有接触到真正的大项目之前，太多的刚入门的人觉得单干就足够了，这种思想是不利于自己未来发展的。在team里，你可以学习如何去与别人合作。
2、锻炼技术能力
学校里大部分同学只会对着课本里的demo打一打，甚至于连个空格都不落下地对着打，看到运行结果跟书里的一样，就欢呼雀跃万事大吉了。一旦遇到真正的需求时，毛线都编不出来。大学里学C那会，考试上机的东西哪里是编程，简直是让我们把数学算法或者公式转换为C程序即可，效率什么的你管不着，怎么for怎么while都可以，学校要的只是运行结果。
随意适当地接触外面的项目，才有机会把所学的那些理论真正地用起来，加深对编程语言的认识，了解怎么让这个算法跑得更快。
3、锻炼与客户的沟通交流能力
用户给的需求一定是会变的（好忧桑有没有）→_→ 而且更多的时候，用户传达的需求思想和我们所理解的思想是有差异的，这就需要我们不停地与客户进行沟通确认。尤其是在交货前一天，客户突然打个电话过来说要改需求文档，你得忍着摔电话的冲动好声好气地回复说：好的，没问题！
4、增长见识、开阔眼界
接触的项目多了，做的事情多了，我们也在一边学习一边成长着，不停地接触着新技术，对于这门技术有更多的理解，对于自己的未来也会有更好的规划。
5、时间管理能力
这个不必多说，一个优秀的coder，必然会有一套自己的时间管理体系，虽然咱们在项目用时预估上总是出点小意外→_→
...
...

接外包的不足嘛，也说说自己的看法：
1、影响学业
这里想指的是像我这样的非科班生。接外包项目必然会压榨日常上课时间，所以逃课、熬夜什么的一点也不出奇怪。我的大学成绩非常凄凉，大一挂两科、大二挂两科、大三重修完两科之后又另外挂了两科，大四别人没课去实习了我辛苦将所有科目重修了。
2、打击自信心
有些人看到外包的一些需求后，发现自己什么都不会，在学校学的东西完全不知道怎么用，瞬时觉得世界倒塌了，希望之光暗淡了。
3、不利于职业规划
这个与上面的好处并不矛盾，具体会是好处还是坏处我的想法是要看个人。每个人的思想境界并不相同，有的人接了外包后，会认为互联网行业做的就是这些”求改界面“、”模仿微信“、”模仿陌陌“等等事情。
...
...

======
毕业后，我们team自然也就解散了，有两个去了B、我去了A、有两个去了T、还有一些去了网易、搜狐等公司。如今我们又聚在一起策划着自己开公司，嗯，果断匿了，逛知乎的同事挺多→_→