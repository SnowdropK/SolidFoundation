注意事项：不能忘记逗号，也不要随便加分号
声明式渲染
v-bind:title="message":鼠标悬停文字
v-bind:todo="item"//todo 对象是变量，即其内容可以是动态
v-bind:key="item.id"
v-bind:id="dynamicId"
v-bind:disabled="isButtonDisabled"
v-bind:href="url"
v-bind:class="{ active: isActive }"
v-bind:style="{ color: activeColor, fontSize: fontSize + 'px' }"
v-bind:value="option.value"

v-bind 缩写
<a v-bind:href="url"></a>
<a :href="url"></a>
v-on 缩写
<a v-on:click="doSomething"></a>
<a @click="doSomething"></a>

条件与循环
v-if="true/false"
v-for="todo in 数组名"

事件监听
v-on:click="reverseMessage"
methods:{
	reverseMessage:function(){
	this.message=this.message.split('').reverse().join('')
	//JS数组操作基础
	}
}

v-model 指令，它能轻松实现表单输入和应用状态之间的双向绑定。
v-for="(item, index) in items"
v-for="item of items"
v-for="value in object"
数据与方法
// 我们的数据对象
var data = { a: 1 }
// 该对象被加入到一个 Vue 实例中
var vm = new Vue({
  data: data
})

模板与文本
插值-文本 
v-once：指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新。
v-html：输出真正的 HTML
<div v-html="rawHtml"></div>

计算属性
var vm = new Vue({
  el: '#example',
  data: {
    message: 'Hello'
  },
  computed: {
    // 计算属性的 getter
    reversedMessage: function () {
      // `this` 指向 vm 实例
      return this.message.split('').reverse().join('')
    }
  }
})

侦听属性

绑定HTML Class
对象语法：
1、
<div class="static"
     v-bind:class="{ active: isActive, 'text-danger': hasError }">
</div>
2、
<div v-bind:class="classObject"></div>
data: {
  classObject: {
    active: true,
    'text-danger': false
  }
}
3、
<div v-bind:class="classObject"></div>
data: {
  isActive: true,
  error: null
},
computed: {
  classObject: function () {
    return {
      active: this.isActive && !this.error,
      'text-danger': this.error && this.error.type === 'fatal'
    }
  }
}
4、
v-bind:style="{ color: activeColor, fontSize: fontSize + 'px' }"

数组语法：
<div class="active text-danger"></div>
<div v-bind:class="[isActive ? activeClass : '', errorClass]"></div>
<div v-bind:class="[{ active: isActive }, errorClass]"></div>

条件渲染
v-show="ok"
v-show 的元素始终会被渲染并保留在 DOM 中

列表渲染
v-for="(item2,index) in items"
v-for="(value2,key,index) in object"

替换数组
迭代比较难，不会，暂时放下

Vue.set(object, key, value)
Vue.set(vm.userProfile, 'age', 27)

显示过滤/排序结果

表单输入绑定
